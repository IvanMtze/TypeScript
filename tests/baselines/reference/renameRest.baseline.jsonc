// === /tests/cases/fourslash/renameRest.ts ===
// interface Gen {
//     x: number;
//     [|RENAME|]: Gen;
//     millenial: string;
// }
// let t: Gen;
// var { x, ...rest } = t;
// rest.RENAME;

// === 0 ===
  // === /tests/cases/fourslash/renameRest.ts ===
  // interface Gen {
  //     x: number;
  //     [|parent|]: Gen;
  //     millenial: string;
  // }
  // let t: Gen;
  // var { x, ...rest } = t;
  // rest.parent;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameRest.ts ===
    // interface Gen {
    //     x: number;
    //     [|parent: Gen;|]
    //     millenial: string;
    // }
    // let t: Gen;
    // var { x, ...rest } = t;
    // rest.parent;
// === 1 ===
  // === /tests/cases/fourslash/renameRest.ts ===
  // interface Gen {
  //     x: number;
  //     parent: Gen;
  //     millenial: string;
  // }
  // let t: Gen;
  // var { x, ...rest } = t;
  // rest.[|parent|];


[
  {
    "textSpan": {
      "start": 35,
      "length": 6
    },
    "fileName": "/tests/cases/fourslash/renameRest.ts",
    "contextSpan": {
      "start": 35,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 114,
      "length": 6
    },
    "fileName": "/tests/cases/fourslash/renameRest.ts"
  }
]

// === /tests/cases/fourslash/renameRest.ts ===
// interface Gen {
//     x: number;
//     RENAME: Gen;
//     millenial: string;
// }
// let t: Gen;
// var { x, ...rest } = t;
// rest.[|RENAME|];

// === 0 ===
  // === /tests/cases/fourslash/renameRest.ts ===
  // interface Gen {
  //     x: number;
  //     [|parent|]: Gen;
  //     millenial: string;
  // }
  // let t: Gen;
  // var { x, ...rest } = t;
  // rest.parent;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameRest.ts ===
    // interface Gen {
    //     x: number;
    //     [|parent: Gen;|]
    //     millenial: string;
    // }
    // let t: Gen;
    // var { x, ...rest } = t;
    // rest.parent;
// === 1 ===
  // === /tests/cases/fourslash/renameRest.ts ===
  // interface Gen {
  //     x: number;
  //     parent: Gen;
  //     millenial: string;
  // }
  // let t: Gen;
  // var { x, ...rest } = t;
  // rest.[|parent|];


[
  {
    "textSpan": {
      "start": 35,
      "length": 6
    },
    "fileName": "/tests/cases/fourslash/renameRest.ts",
    "contextSpan": {
      "start": 35,
      "length": 12
    }
  },
  {
    "textSpan": {
      "start": 114,
      "length": 6
    },
    "fileName": "/tests/cases/fourslash/renameRest.ts"
  }
]