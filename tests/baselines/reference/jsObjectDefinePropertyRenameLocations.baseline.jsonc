=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/index.js ======*/

var CircularList = (function () {
    var CircularList = function() {};
    Object.defineProperty(CircularList.prototype, "[|RENAME|]", { value: 0, writable: true });
    CircularList.prototype.push = function (value) {
        // ...
        this.RENAME + this.RENAME
    }
    return CircularList;
})()

=== 0 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "[|maxLength|]", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.maxLength
//     }
//     return CircularList;
// })()
=== 1 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.[|maxLength|] + this.maxLength
//     }
//     return CircularList;
// })()
=== 2 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.[|maxLength|]
//     }
//     return CircularList;
// })()


[
  {
    "textSpan": {
      "start": 123,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 247,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 264,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/index.js ======*/

var CircularList = (function () {
    var CircularList = function() {};
    Object.defineProperty(CircularList.prototype, "RENAME", { value: 0, writable: true });
    CircularList.prototype.push = function (value) {
        // ...
        this.[|RENAME|] + this.RENAME
    }
    return CircularList;
})()

=== 0 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "[|maxLength|]", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.maxLength
//     }
//     return CircularList;
// })()
=== 1 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.[|maxLength|] + this.maxLength
//     }
//     return CircularList;
// })()
=== 2 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.[|maxLength|]
//     }
//     return CircularList;
// })()


[
  {
    "textSpan": {
      "start": 123,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 247,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 264,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/index.js ======*/

var CircularList = (function () {
    var CircularList = function() {};
    Object.defineProperty(CircularList.prototype, "RENAME", { value: 0, writable: true });
    CircularList.prototype.push = function (value) {
        // ...
        this.RENAME + this.[|RENAME|]
    }
    return CircularList;
})()

=== 0 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "[|maxLength|]", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.maxLength
//     }
//     return CircularList;
// })()
=== 1 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.[|maxLength|] + this.maxLength
//     }
//     return CircularList;
// })()
=== 2 ===
// === /tests/cases/fourslash/index.js ===
// var CircularList = (function () {
//     var CircularList = function() {};
//     Object.defineProperty(CircularList.prototype, "maxLength", { value: 0, writable: true });
//     CircularList.prototype.push = function (value) {
//         // ...
//         this.maxLength + this.[|maxLength|]
//     }
//     return CircularList;
// })()


[
  {
    "textSpan": {
      "start": 123,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 247,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  },
  {
    "textSpan": {
      "start": 264,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/index.js"
  }
]