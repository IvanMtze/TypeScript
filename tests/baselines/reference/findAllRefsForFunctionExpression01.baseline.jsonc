// === /tests/cases/fourslash/file1.ts ===
// var foo = /*FIND ALL REFS*/function [|foo|](a = [|foo|](), b = () => [|foo|]) {
//     [|foo|]([|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function /*FIND ALL REFS*/[|foo|](a = [|foo|](), b = () => [|foo|]) {
//     [|foo|]([|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // isDefinition: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function [|foo|](a = /*FIND ALL REFS*/[|foo|](), b = () => [|foo|]) {
//     [|foo|]([|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function [|foo|](a = [|foo|](), b = () => /*FIND ALL REFS*/[|foo|]) {
//     [|foo|]([|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function [|foo|](a = [|foo|](), b = () => [|foo|]) {
//     /*FIND ALL REFS*/[|foo|]([|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function [|foo|](a = [|foo|](), b = () => [|foo|]) {
//     [|foo|](/*FIND ALL REFS*/[|foo|], [|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file1.ts ===
// var foo = function [|foo|](a = [|foo|](), b = () => [|foo|]) {
//     [|foo|]([|foo|], /*FIND ALL REFS*/[|foo|]);
// }

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "local function"
    // name: "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "local function",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "foo",
    //   "kind": "functionName"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ",",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "b",
    //   "kind": "parameterName"
    //  },
    //  {
    //   "text": "?",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "...",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=>",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "void",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/file1.ts ===
    // var foo = function [|foo|](a = foo(), b = () => foo) {
    //     foo(foo, foo);
    // }
      // === ContextSpan ===
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = [|function foo(a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function [|foo|](a = foo(), b = () => foo) {
      //     foo(foo, foo);
      // }
        // === ContextSpan ===
        // === /tests/cases/fourslash/file1.ts ===
        // var foo = [|function foo(a = foo(), b = () => foo) {
        //     foo(foo, foo);
        // }|]
    // === 1 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = [|foo|](), b = () => foo) {
      //     foo(foo, foo);
      // }
    // === 2 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => [|foo|]) {
      //     foo(foo, foo);
      // }
    // === 3 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     [|foo|](foo, foo);
      // }
    // === 4 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo([|foo|], foo);
      // }
    // === 5 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/file1.ts ===
      // var foo = function foo(a = foo(), b = () => foo) {
      //     foo(foo, [|foo|]);
      // }


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file1.ts",
      "kind": "local function",
      "name": "(local function) foo(a?: void, b?: () => (a?: void, b?: ...) => void): void",
      "textSpan": {
        "start": 19,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "local function",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "foo",
          "kind": "functionName"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ",",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "b",
          "kind": "parameterName"
        },
        {
          "text": "?",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "...",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "void",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 10,
        "length": 61
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 19,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "contextSpan": {
          "start": 10,
          "length": 61
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 27,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 44,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 55,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 59,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 64,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/file1.ts",
        "isWriteAccess": false
      }
    ]
  }
]