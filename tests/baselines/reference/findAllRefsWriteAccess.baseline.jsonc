// === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
// interface Obj {
//     [`/*FIND ALL REFS*/[|num|]`]: number;
// }
// 
// let o: Obj = {
//     [`[|num|]`]: 0
// };
// 
// o = {
//     ['[|num|]']: 1
// };
// 
// o['[|num|]'] = 2;
// o[`[|num|]`] = 3;
// 
// o['[|num|]'];
// o[`[|num|]`];

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) Obj[`num`]: number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "Obj",
    //   "kind": "interfaceName"
    //  },
    //  {
    //   "text": "[",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "`num`",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": "]",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
    // interface Obj {
    //     [`[|num|]`]: number;
    // }
    // 
    // let o: Obj = {
    //     [`num`]: 0
    // };
    // 
    // o = {
    //     ['num']: 1
    // };
    // 
    // o['num'] = 2;
    // o[`num`] = 3;
    // 
    // o['num'];
    // o[`num`];
      // === ContextSpan ===
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [|[`num`]: number;|]
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`num`];
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: true
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`[|num|]`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`num`];
        // === ContextSpan ===
        // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
        // interface Obj {
        //     [|[`num`]: number;|]
        // }
        // 
        // let o: Obj = {
        //     [`num`]: 0
        // };
        // 
        // o = {
        //     ['num']: 1
        // };
        // 
        // o['num'] = 2;
        // o[`num`] = 3;
        // 
        // o['num'];
        // o[`num`];
    // === 1 ===
      // isWriteAccess: true
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`[|num|]`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`num`];
        // === ContextSpan ===
        // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
        // interface Obj {
        //     [`num`]: number;
        // }
        // 
        // let o: Obj = {
        //     [|[`num`]: 0|]
        // };
        // 
        // o = {
        //     ['num']: 1
        // };
        // 
        // o['num'] = 2;
        // o[`num`] = 3;
        // 
        // o['num'];
        // o[`num`];
    // === 2 ===
      // isWriteAccess: true
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['[|num|]']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`num`];
        // === ContextSpan ===
        // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
        // interface Obj {
        //     [`num`]: number;
        // }
        // 
        // let o: Obj = {
        //     [`num`]: 0
        // };
        // 
        // o = {
        //     [|['num']: 1|]
        // };
        // 
        // o['num'] = 2;
        // o[`num`] = 3;
        // 
        // o['num'];
        // o[`num`];
    // === 3 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['[|num|]'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`num`];
    // === 4 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`[|num|]`] = 3;
      // 
      // o['num'];
      // o[`num`];
    // === 5 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['[|num|]'];
      // o[`num`];
    // === 6 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/findAllRefsWriteAccess.ts ===
      // interface Obj {
      //     [`num`]: number;
      // }
      // 
      // let o: Obj = {
      //     [`num`]: 0
      // };
      // 
      // o = {
      //     ['num']: 1
      // };
      // 
      // o['num'] = 2;
      // o[`num`] = 3;
      // 
      // o['num'];
      // o[`[|num|]`];


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
      "kind": "property",
      "name": "(property) Obj[`num`]: number",
      "textSpan": {
        "start": 22,
        "length": 3
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Obj",
          "kind": "interfaceName"
        },
        {
          "text": "[",
          "kind": "punctuation"
        },
        {
          "text": "`num`",
          "kind": "propertyName"
        },
        {
          "text": "]",
          "kind": "punctuation"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 20,
        "length": 16
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 22,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "contextSpan": {
          "start": 20,
          "length": 16
        },
        "isWriteAccess": false,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 61,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "contextSpan": {
          "start": 59,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 86,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "contextSpan": {
          "start": 84,
          "length": 10
        },
        "isWriteAccess": true,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 102,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 116,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 131,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "isWriteAccess": false,
        "isDefinition": false
      },
      {
        "textSpan": {
          "start": 141,
          "length": 3
        },
        "fileName": "/tests/cases/fourslash/findAllRefsWriteAccess.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]