=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/renameInheritedProperties5.ts ======*/

interface C extends D {
    propC: number;
}
interface D extends C {
    [|RENAME|]: string;
}
var d: D;
d.RENAME;

=== 0 ===
// === /tests/cases/fourslash/renameInheritedProperties5.ts ===
// interface C extends D {
//     propC: number;
// }
// interface D extends C {
//     [|propD|]: string;
// }
// var d: D;
// d.propD;
=== ContextSpan ===
  // === /tests/cases/fourslash/renameInheritedProperties5.ts ===
  // interface C extends D {
  //     propC: number;
  // }
  // interface D extends C {
  //     [|propD: string;|]
  // }
  // var d: D;
  // d.propD;
=== 1 ===
// === /tests/cases/fourslash/renameInheritedProperties5.ts ===
// interface C extends D {
//     propC: number;
// }
// interface D extends C {
//     propD: string;
// }
// var d: D;
// d.[|propD|];


[
  {
    "textSpan": {
      "start": 73,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameInheritedProperties5.ts",
    "contextSpan": {
      "start": 73,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 102,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameInheritedProperties5.ts"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/renameInheritedProperties5.ts ======*/

interface C extends D {
    propC: number;
}
interface D extends C {
    RENAME: string;
}
var d: D;
d.[|RENAME|];

=== 0 ===
// === /tests/cases/fourslash/renameInheritedProperties5.ts ===
// interface C extends D {
//     propC: number;
// }
// interface D extends C {
//     [|propD|]: string;
// }
// var d: D;
// d.propD;
=== ContextSpan ===
  // === /tests/cases/fourslash/renameInheritedProperties5.ts ===
  // interface C extends D {
  //     propC: number;
  // }
  // interface D extends C {
  //     [|propD: string;|]
  // }
  // var d: D;
  // d.propD;
=== 1 ===
// === /tests/cases/fourslash/renameInheritedProperties5.ts ===
// interface C extends D {
//     propC: number;
// }
// interface D extends C {
//     propD: string;
// }
// var d: D;
// d.[|propD|];


[
  {
    "textSpan": {
      "start": 73,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameInheritedProperties5.ts",
    "contextSpan": {
      "start": 73,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 102,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameInheritedProperties5.ts"
  }
]