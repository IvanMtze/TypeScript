// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     [|RENAME|](): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     [|RENAME|]() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     [|RENAME|]: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get [|RENAME|]() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set [|RENAME|](v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "[|RENAME|]"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "[|RENAME|]": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["[|RENAME|]"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["[|RENAME|]"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["[|RENAME|]"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["RENAME"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     RENAME(): void;
// }
// 
// var o1: I = {
//     prop1() { },
//     RENAME() { }
// };
// 
// var o2: I = {
//     prop1: () => { },
//     RENAME: () => { }
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     get RENAME() { return () => { }; }
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     set RENAME(v) { }
// };
// 
// var o5: I = {
//     "prop1"() { },
//     "RENAME"() { }
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     "RENAME": function () { }
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     ["RENAME"]: function () { }
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     ["RENAME"]() { }
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     get ["RENAME"]() { return () => { }; }
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     set ["[|RENAME|]"](v) { }
// };

// === 0 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     [|prop2|](): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     [|prop2(): void;|]
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 1 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     [|prop2|]() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     [|prop2() { }|]
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 2 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     [|prop2|]: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     [|prop2: () => { }|]
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 3 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get [|prop2|]() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     [|get prop2() { return () => { }; }|]
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 4 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set [|prop2|](v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     [|set prop2(v) { }|]
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 5 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "[|prop2|]"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     [|"prop2"() { }|]
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 6 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "[|prop2|]": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     [|"prop2": function () { }|]
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 7 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["[|prop2|]"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     [|["prop2"]: function () { }|]
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 8 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["[|prop2|]"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     [|["prop2"]() { }|]
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 9 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["[|prop2|]"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["prop2"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     [|get ["prop2"]() { return () => { }; }|]
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     set ["prop2"](v) { }
    // };
// === 10 ===
  // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
  // interface I {
  //     prop1: () => void;
  //     prop2(): void;
  // }
  // 
  // var o1: I = {
  //     prop1() { },
  //     prop2() { }
  // };
  // 
  // var o2: I = {
  //     prop1: () => { },
  //     prop2: () => { }
  // };
  // 
  // var o3: I = {
  //     get prop1() { return () => { }; },
  //     get prop2() { return () => { }; }
  // };
  // 
  // var o4: I = {
  //     set prop1(v) { },
  //     set prop2(v) { }
  // };
  // 
  // var o5: I = {
  //     "prop1"() { },
  //     "prop2"() { }
  // };
  // 
  // var o6: I = {
  //     "prop1": function () { },
  //     "prop2": function () { }
  // };
  // 
  // var o7: I = {
  //     ["prop1"]: function () { },
  //     ["prop2"]: function () { }
  // };
  // 
  // var o8: I = {
  //     ["prop1"]() { },
  //     ["prop2"]() { }
  // };
  // 
  // var o9: I = {
  //     get ["prop1"]() { return () => { }; },
  //     get ["prop2"]() { return () => { }; }
  // };
  // 
  // var o10: I = {
  //     set ["prop1"](v) { },
  //     set ["[|prop2|]"](v) { }
  // };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
    // interface I {
    //     prop1: () => void;
    //     prop2(): void;
    // }
    // 
    // var o1: I = {
    //     prop1() { },
    //     prop2() { }
    // };
    // 
    // var o2: I = {
    //     prop1: () => { },
    //     prop2: () => { }
    // };
    // 
    // var o3: I = {
    //     get prop1() { return () => { }; },
    //     get prop2() { return () => { }; }
    // };
    // 
    // var o4: I = {
    //     set prop1(v) { },
    //     set prop2(v) { }
    // };
    // 
    // var o5: I = {
    //     "prop1"() { },
    //     "prop2"() { }
    // };
    // 
    // var o6: I = {
    //     "prop1": function () { },
    //     "prop2": function () { }
    // };
    // 
    // var o7: I = {
    //     ["prop1"]: function () { },
    //     ["prop2"]: function () { }
    // };
    // 
    // var o8: I = {
    //     ["prop1"]() { },
    //     ["prop2"]() { }
    // };
    // 
    // var o9: I = {
    //     get ["prop1"]() { return () => { }; },
    //     get ["prop2"]() { return () => { }; }
    // };
    // 
    // var o10: I = {
    //     set ["prop1"](v) { },
    //     [|set ["prop2"](v) { }|]
    // };


[
  {
    "textSpan": {
      "start": 41,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 41,
      "length": 14
    }
  },
  {
    "textSpan": {
      "start": 94,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 94,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 150,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 150,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 232,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 228,
      "length": 33
    }
  },
  {
    "textSpan": {
      "start": 310,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 306,
      "length": 16
    }
  },
  {
    "textSpan": {
      "start": 365,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 364,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 431,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 430,
      "length": 24
    }
  },
  {
    "textSpan": {
      "start": 511,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 509,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 581,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 579,
      "length": 15
    }
  },
  {
    "textSpan": {
      "start": 666,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 660,
      "length": 37
    }
  },
  {
    "textSpan": {
      "start": 753,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/renameContextuallyTypedProperties2.ts",
    "contextSpan": {
      "start": 747,
      "length": 20
    }
  }
]