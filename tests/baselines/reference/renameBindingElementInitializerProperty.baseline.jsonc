// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
// function f({/*START PREFIX*/required: [|RENAME|], optional = RENAME}: {required: number, optional?: number}) {
//     console.log("required", RENAME);
//     console.log("optional", optional);
// }
// 
// f({required: 10});

// === 0 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({[|required|], optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f([|{required, optional = required}: {required: number, optional?: number}|]) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 1 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = [|required|]}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
// === 2 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {required: number, optional?: number}) {
  //     console.log("required", [|required|]);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});


[
  {
    "textSpan": {
      "start": 12,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 11,
      "length": 70
    },
    "prefixText": "required: "
  },
  {
    "textSpan": {
      "start": 33,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  },
  {
    "textSpan": {
      "start": 113,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
// function f({/*START PREFIX*/required: RENAME, optional = [|RENAME|]}: {required: number, optional?: number}) {
//     console.log("required", RENAME);
//     console.log("optional", optional);
// }
// 
// f({required: 10});

// === 0 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({[|required|], optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f([|{required, optional = required}: {required: number, optional?: number}|]) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 1 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = [|required|]}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
// === 2 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {required: number, optional?: number}) {
  //     console.log("required", [|required|]);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});


[
  {
    "textSpan": {
      "start": 12,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 11,
      "length": 70
    },
    "prefixText": "required: "
  },
  {
    "textSpan": {
      "start": 33,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  },
  {
    "textSpan": {
      "start": 113,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
// function f({/*START PREFIX*/required: RENAME, optional = RENAME}: {required: number, optional?: number}) {
//     console.log("required", [|RENAME|]);
//     console.log("optional", optional);
// }
// 
// f({required: 10});

// === 0 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({[|required|], optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f([|{required, optional = required}: {required: number, optional?: number}|]) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 1 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = [|required|]}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
// === 2 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {required: number, optional?: number}) {
  //     console.log("required", [|required|]);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});


[
  {
    "textSpan": {
      "start": 12,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 11,
      "length": 70
    },
    "prefixText": "required: "
  },
  {
    "textSpan": {
      "start": 33,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  },
  {
    "textSpan": {
      "start": 113,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
// function f({RENAME: required/*END SUFFIX*/, optional = required}: {[|RENAME|]: number, optional?: number}) {
//     console.log("required", required);
//     console.log("optional", optional);
// }
// 
// f({RENAME: 10});

// === 0 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({[|required|], optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f([|{required, optional = required}: {required: number, optional?: number}|]) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 1 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {[|required|]: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f({required, optional = required}: {[|required: number,|] optional?: number}) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 2 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({[|required|]: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f({required, optional = required}: {required: number, optional?: number}) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({[|required: 10|]});


[
  {
    "textSpan": {
      "start": 12,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 11,
      "length": 70
    },
    "suffixText": ": required"
  },
  {
    "textSpan": {
      "start": 45,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 45,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 169,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 169,
      "length": 12
    }
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
// function f({RENAME: required/*END SUFFIX*/, optional = required}: {RENAME: number, optional?: number}) {
//     console.log("required", required);
//     console.log("optional", optional);
// }
// 
// f({[|RENAME|]: 10});

// === 0 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({[|required|], optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f([|{required, optional = required}: {required: number, optional?: number}|]) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 1 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {[|required|]: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({required: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f({required, optional = required}: {[|required: number,|] optional?: number}) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({required: 10});
// === 2 ===
  // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
  // function f({required, optional = required}: {required: number, optional?: number}) {
  //     console.log("required", required);
  //     console.log("optional", optional);
  // }
  // 
  // f({[|required|]: 10});
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameBindingElementInitializerProperty.ts ===
    // function f({required, optional = required}: {required: number, optional?: number}) {
    //     console.log("required", required);
    //     console.log("optional", optional);
    // }
    // 
    // f({[|required: 10|]});


[
  {
    "textSpan": {
      "start": 12,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 11,
      "length": 70
    },
    "suffixText": ": required"
  },
  {
    "textSpan": {
      "start": 45,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 45,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 169,
      "length": 8
    },
    "fileName": "/tests/cases/fourslash/renameBindingElementInitializerProperty.ts",
    "contextSpan": {
      "start": 169,
      "length": 12
    }
  }
]