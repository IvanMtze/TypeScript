// === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
// interface Foo {
//     hello: () => void
// }
// 
// var bar: Foo = { [|hello|]: helloImpl };
// var baz: Foo = { "[|hello|]": helloImpl };
// 
// function helloImpl () {}
// 
// function whatever(x: Foo = { [|hello|]() {/**1*/} }) {
//     x.he/*GOTO IMPL*/llo()
// }
// 
// class Bar {
//     x: Foo = { [|hello|]() {} }
// 
//     constructor(public f: Foo = { [|hello|]() {/**3*/} } ) {}
// }

// === 0 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { [|hello|]: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { [|hello: helloImpl|] };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 1 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "[|hello|]": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { [|"hello": helloImpl|] };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 2 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { [|hello|]() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { [|hello() {/**1*/}|] }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 3 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { [|hello|]() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { [|hello() {}|] }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 4 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { [|hello|]() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { [|hello() {/**3*/}|] } ) {}
    // }


[
  {
    "textSpan": {
      "start": 58,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 58,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "property",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "propertyName"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "=>",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "property"
  },
  {
    "textSpan": {
      "start": 96,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 95,
      "length": 18
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "property",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "\"hello\"",
        "kind": "propertyName"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "=>",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "property"
  },
  {
    "textSpan": {
      "start": 173,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 173,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  },
  {
    "textSpan": {
      "start": 239,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 239,
      "length": 10
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  },
  {
    "textSpan": {
      "start": 287,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 287,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  }
]

// === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
// interface Foo {
//     he/*GOTO IMPL*/llo: () => void
// }
// 
// var bar: Foo = { [|hello|]: helloImpl };
// var baz: Foo = { "[|hello|]": helloImpl };
// 
// function helloImpl () {}
// 
// function whatever(x: Foo = { [|hello|]() {/**1*/} }) {
//     x.hello()
// }
// 
// class Bar {
//     x: Foo = { [|hello|]() {} }
// 
//     constructor(public f: Foo = { [|hello|]() {/**3*/} } ) {}
// }

// === 0 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { [|hello|]: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { [|hello: helloImpl|] };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 1 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "[|hello|]": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { [|"hello": helloImpl|] };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 2 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { [|hello|]() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { [|hello() {/**1*/}|] }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 3 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { [|hello|]() {} }
  // 
  //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { [|hello() {}|] }
    // 
    //     constructor(public f: Foo = { hello() {/**3*/} } ) {}
    // }
// === 4 ===
  // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
  // interface Foo {
  //     hello: () => void
  // }
  // 
  // var bar: Foo = { hello: helloImpl };
  // var baz: Foo = { "hello": helloImpl };
  // 
  // function helloImpl () {}
  // 
  // function whatever(x: Foo = { hello() {/**1*/} }) {
  //     x.hello()
  // }
  // 
  // class Bar {
  //     x: Foo = { hello() {} }
  // 
  //     constructor(public f: Foo = { [|hello|]() {/**3*/} } ) {}
  // }
    // === ContextSpan ===
    // === /tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts ===
    // interface Foo {
    //     hello: () => void
    // }
    // 
    // var bar: Foo = { hello: helloImpl };
    // var baz: Foo = { "hello": helloImpl };
    // 
    // function helloImpl () {}
    // 
    // function whatever(x: Foo = { hello() {/**1*/} }) {
    //     x.hello()
    // }
    // 
    // class Bar {
    //     x: Foo = { hello() {} }
    // 
    //     constructor(public f: Foo = { [|hello() {/**3*/}|] } ) {}
    // }


[
  {
    "textSpan": {
      "start": 58,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 58,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "property",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "propertyName"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "=>",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "property"
  },
  {
    "textSpan": {
      "start": 96,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 95,
      "length": 18
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "property",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "\"hello\"",
        "kind": "propertyName"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "=>",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "property"
  },
  {
    "textSpan": {
      "start": 173,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 173,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  },
  {
    "textSpan": {
      "start": 239,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 239,
      "length": 10
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  },
  {
    "textSpan": {
      "start": 287,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/goToImplementationInterfaceMethod_00.ts",
    "contextSpan": {
      "start": 287,
      "length": 16
    },
    "displayParts": [
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": "method",
        "kind": "text"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "hello",
        "kind": "methodName"
      },
      {
        "text": "(",
        "kind": "punctuation"
      },
      {
        "text": ")",
        "kind": "punctuation"
      },
      {
        "text": ":",
        "kind": "punctuation"
      },
      {
        "text": " ",
        "kind": "space"
      },
      {
        "text": "void",
        "kind": "keyword"
      }
    ],
    "kind": "method"
  }
]