=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/renameStringLiteralTypes3.ts ======*/

type Foo = "[|RENAME|]" | "b";

class C {
    p: Foo = "RENAME";
    m() {
        switch (this.p) {
            case "RENAME":
                return 1;
            case "b":
                return 2;
        }
    }
}

=== 0 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "[|a|]" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 1 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "[|a|]";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 2 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "[|a|]":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }


[
  {
    "textSpan": {
      "start": 12,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 47,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 105,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/renameStringLiteralTypes3.ts ======*/

type Foo = "RENAME" | "b";

class C {
    p: Foo = "[|RENAME|]";
    m() {
        switch (this.p) {
            case "RENAME":
                return 1;
            case "b":
                return 2;
        }
    }
}

=== 0 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "[|a|]" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 1 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "[|a|]";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 2 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "[|a|]":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }


[
  {
    "textSpan": {
      "start": 12,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 47,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 105,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/renameStringLiteralTypes3.ts ======*/

type Foo = "RENAME" | "b";

class C {
    p: Foo = "RENAME";
    m() {
        switch (this.p) {
            case "[|RENAME|]":
                return 1;
            case "b":
                return 2;
        }
    }
}

=== 0 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "[|a|]" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 1 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "[|a|]";
//     m() {
//         switch (this.p) {
//             case "a":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }
=== 2 ===
// === /tests/cases/fourslash/renameStringLiteralTypes3.ts ===
// type Foo = "a" | "b";
// 
// class C {
//     p: Foo = "a";
//     m() {
//         switch (this.p) {
//             case "[|a|]":
//                 return 1;
//             case "b":
//                 return 2;
//         }
//     }
// }


[
  {
    "textSpan": {
      "start": 12,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 47,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  },
  {
    "textSpan": {
      "start": 105,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/renameStringLiteralTypes3.ts"
  }
]