=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/file.tsx ======*/

declare module JSX {
    interface Element { }
    interface IntrinsicElements {
    }
    interface ElementAttributesProperty { props; }
}
interface OptionPropBag {
    [|RENAME|]: number
    propString: string
    optional?: boolean
}
declare function Opt(attributes: OptionPropBag): JSX.Element;
let opt = <Opt />;
let opt1 = <Opt RENAME={100} propString />;
let opt2 = <Opt RENAME={100} optional/>;
let opt3 = <Opt wrong />;

=== 0 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     [|propx|]: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     [|propx: number|]
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 1 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt [|propx|]={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt [|propx={100}|] propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 2 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt [|propx|]={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt [|propx={100}|] optional/>;
  // let opt3 = <Opt wrong />;


[
  {
    "textSpan": {
      "start": 170,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 170,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 329,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 329,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 372,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 372,
      "length": 11
    }
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/file.tsx ======*/

declare module JSX {
    interface Element { }
    interface IntrinsicElements {
    }
    interface ElementAttributesProperty { props; }
}
interface OptionPropBag {
    RENAME: number
    propString: string
    optional?: boolean
}
declare function Opt(attributes: OptionPropBag): JSX.Element;
let opt = <Opt />;
let opt1 = <Opt [|RENAME|]={100} propString />;
let opt2 = <Opt RENAME={100} optional/>;
let opt3 = <Opt wrong />;

=== 0 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     [|propx|]: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     [|propx: number|]
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 1 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt [|propx|]={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt [|propx={100}|] propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 2 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt [|propx|]={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt [|propx={100}|] optional/>;
  // let opt3 = <Opt wrong />;


[
  {
    "textSpan": {
      "start": 170,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 170,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 329,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 329,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 372,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 372,
      "length": 11
    }
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/file.tsx ======*/

declare module JSX {
    interface Element { }
    interface IntrinsicElements {
    }
    interface ElementAttributesProperty { props; }
}
interface OptionPropBag {
    RENAME: number
    propString: string
    optional?: boolean
}
declare function Opt(attributes: OptionPropBag): JSX.Element;
let opt = <Opt />;
let opt1 = <Opt RENAME={100} propString />;
let opt2 = <Opt [|RENAME|]={100} optional/>;
let opt3 = <Opt wrong />;

=== 0 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     [|propx|]: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     [|propx: number|]
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 1 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt [|propx|]={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt [|propx={100}|] propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
=== 2 ===
// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     propx: number
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt [|propx|]={100} optional/>;
// let opt3 = <Opt wrong />;
=== ContextSpan ===
  // === /tests/cases/fourslash/file.tsx ===
  // declare module JSX {
  //     interface Element { }
  //     interface IntrinsicElements {
  //     }
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     propx: number
  //     propString: string
  //     optional?: boolean
  // }
  // declare function Opt(attributes: OptionPropBag): JSX.Element;
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt [|propx={100}|] optional/>;
  // let opt3 = <Opt wrong />;


[
  {
    "textSpan": {
      "start": 170,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 170,
      "length": 13
    }
  },
  {
    "textSpan": {
      "start": 329,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 329,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 372,
      "length": 5
    },
    "fileName": "/tests/cases/fourslash/file.tsx",
    "contextSpan": {
      "start": 372,
      "length": 11
    }
  }
]