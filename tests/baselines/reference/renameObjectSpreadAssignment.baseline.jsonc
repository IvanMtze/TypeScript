// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
// interface A1 { a: number };
// interface A2 { a?: number };
// let [|RENAME|]: A1;
// let a2: A2;
// let a12 = { ...RENAME, ...a2 };

// === 0 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let [|a1|]: A1;
  // let a2: A2;
  // let a12 = { ...a1, ...a2 };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
    // interface A1 { a: number };
    // interface A2 { a?: number };
    // [|let a1: A1;|]
    // let a2: A2;
    // let a12 = { ...a1, ...a2 };
// === 1 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let a2: A2;
  // let a12 = { ...[|a1|], ...a2 };


[
  {
    "textSpan": {
      "start": 61,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts",
    "contextSpan": {
      "start": 57,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 96,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
// interface A1 { a: number };
// interface A2 { a?: number };
// let a1: A1;
// let [|RENAME|]: A2;
// let a12 = { ...a1, ...RENAME };

// === 0 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let [|a2|]: A2;
  // let a12 = { ...a1, ...a2 };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
    // interface A1 { a: number };
    // interface A2 { a?: number };
    // let a1: A1;
    // [|let a2: A2;|]
    // let a12 = { ...a1, ...a2 };
// === 1 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let a2: A2;
  // let a12 = { ...a1, ...[|a2|] };


[
  {
    "textSpan": {
      "start": 73,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts",
    "contextSpan": {
      "start": 69,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 103,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
// interface A1 { a: number };
// interface A2 { a?: number };
// let RENAME: A1;
// let a2: A2;
// let a12 = { ...[|RENAME|], ...a2 };

// === 0 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let [|a1|]: A1;
  // let a2: A2;
  // let a12 = { ...a1, ...a2 };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
    // interface A1 { a: number };
    // interface A2 { a?: number };
    // [|let a1: A1;|]
    // let a2: A2;
    // let a12 = { ...a1, ...a2 };
// === 1 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let a2: A2;
  // let a12 = { ...[|a1|], ...a2 };


[
  {
    "textSpan": {
      "start": 61,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts",
    "contextSpan": {
      "start": 57,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 96,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts"
  }
]

// === RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
// === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
// interface A1 { a: number };
// interface A2 { a?: number };
// let a1: A1;
// let RENAME: A2;
// let a12 = { ...a1, ...[|RENAME|] };

// === 0 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let [|a2|]: A2;
  // let a12 = { ...a1, ...a2 };
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
    // interface A1 { a: number };
    // interface A2 { a?: number };
    // let a1: A1;
    // [|let a2: A2;|]
    // let a12 = { ...a1, ...a2 };
// === 1 ===
  // === /tests/cases/fourslash/renameObjectSpreadAssignment.ts ===
  // interface A1 { a: number };
  // interface A2 { a?: number };
  // let a1: A1;
  // let a2: A2;
  // let a12 = { ...a1, ...[|a2|] };


[
  {
    "textSpan": {
      "start": 73,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts",
    "contextSpan": {
      "start": 69,
      "length": 11
    }
  },
  {
    "textSpan": {
      "start": 103,
      "length": 2
    },
    "fileName": "/tests/cases/fourslash/renameObjectSpreadAssignment.ts"
  }
]