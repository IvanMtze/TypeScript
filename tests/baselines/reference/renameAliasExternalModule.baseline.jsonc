=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/b.ts ======*/

import RENAME = require("./a");
import C = RENAME.SomeClass;

=== 0 ===
// === /tests/cases/fourslash/b.ts ===
// import [|M|] = require("./a");
// import C = M.SomeClass;
=== ContextSpan ===
  // === /tests/cases/fourslash/b.ts ===
  // [|import M = require("./a");|]
  // import C = M.SomeClass;
=== 1 ===
// === /tests/cases/fourslash/b.ts ===
// import M = require("./a");
// import C = [|M|].SomeClass;


[
  {
    "textSpan": {
      "start": 7,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/b.ts",
    "contextSpan": {
      "start": 0,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 38,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/b.ts"
  }
]

=== RenameOptions ===
{
 "findInStrings": false,
 "findInComments": false,
 "providePrefixAndSuffixTextForRename": true
}
/*====== /tests/cases/fourslash/b.ts ======*/

import RENAME = require("./a");
import C = RENAME.SomeClass;

=== 0 ===
// === /tests/cases/fourslash/b.ts ===
// import [|M|] = require("./a");
// import C = M.SomeClass;
=== ContextSpan ===
  // === /tests/cases/fourslash/b.ts ===
  // [|import M = require("./a");|]
  // import C = M.SomeClass;
=== 1 ===
// === /tests/cases/fourslash/b.ts ===
// import M = require("./a");
// import C = [|M|].SomeClass;


[
  {
    "textSpan": {
      "start": 7,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/b.ts",
    "contextSpan": {
      "start": 0,
      "length": 26
    }
  },
  {
    "textSpan": {
      "start": 38,
      "length": 1
    },
    "fileName": "/tests/cases/fourslash/b.ts"
  }
]