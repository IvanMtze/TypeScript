// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     /*OCCURENCES*/[|constructor|]();
//     [|constructor|](x: number);
//     [|constructor|](y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

=== 0 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     constructor(x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     [|constructor();|]
  //     constructor(x: number);
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 1 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     [|constructor|](x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     [|constructor(x: number);|]
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 2 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     [|constructor|](y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     [|constructor(y: string);|]
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 3 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     constructor(y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     constructor(y: string);
  //     [|constructor(a?: any) {
  //     }|]
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }


[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     /*OCCURENCES*/[|constructor|](x: number);
//     [|constructor|](y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

=== 0 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     constructor(x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     [|constructor();|]
  //     constructor(x: number);
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 1 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     [|constructor|](x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     [|constructor(x: number);|]
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 2 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     [|constructor|](y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     [|constructor(y: string);|]
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 3 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     constructor(y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     constructor(y: string);
  //     [|constructor(a?: any) {
  //     }|]
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }


[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     [|constructor|](x: number);
//     /*OCCURENCES*/[|constructor|](y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

=== 0 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     constructor(x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     [|constructor();|]
  //     constructor(x: number);
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 1 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     [|constructor|](x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     [|constructor(x: number);|]
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 2 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     [|constructor|](y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     [|constructor(y: string);|]
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 3 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     constructor(y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     constructor(y: string);
  //     [|constructor(a?: any) {
  //     }|]
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }


[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]

// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     [|constructor|](x: number);
//     [|constructor|](y: string);
//     /*OCCURENCES*/[|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }

=== 0 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     [|constructor|]();
//     constructor(x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     [|constructor();|]
  //     constructor(x: number);
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 1 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     [|constructor|](x: number);
//     constructor(y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     [|constructor(x: number);|]
  //     constructor(y: string);
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 2 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     [|constructor|](y: string);
//     constructor(a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     [|constructor(y: string);|]
  //     constructor(a?: any) {
  //     }
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }
=== 3 ===
// === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
// let A = class Foo {
//     constructor();
//     constructor(x: number);
//     constructor(y: string);
//     [|constructor|](a?: any) {
//     }
// }
// 
// let B = class D {
//     constructor(x: number) {
//     }
// }
=== ContextSpan ===
  // === /tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts ===
  // let A = class Foo {
  //     constructor();
  //     constructor(x: number);
  //     constructor(y: string);
  //     [|constructor(a?: any) {
  //     }|]
  // }
  // 
  // let B = class D {
  //     constructor(x: number) {
  //     }
  // }


[
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 24,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 24,
      "length": 14
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 43,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 43,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 71,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 71,
      "length": 23
    }
  },
  {
    "fileName": "/tests/cases/fourslash/getOccurrencesClassExpressionConstructor.ts",
    "textSpan": {
      "start": 99,
      "length": 11
    },
    "isWriteAccess": false,
    "contextSpan": {
      "start": 99,
      "length": 28
    }
  }
]