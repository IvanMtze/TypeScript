// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { /*FIND ALL REFS*/[|a|]: number; };
// }
// 
// interface Base {
//     a: string;
//     b: string;
// }
// 
// interface HasAOrB extends Base {
//     a: string;
//     b: string;
// }
// 
// interface Two {
//     common: HasAOrB;
// }
// 
// var x : One | Two;
// 
// x.common.[|a|];

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) a: number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { [|a|]: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a: number;|] };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: true
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a|]: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { [|a: number;|] };
        // }
        // 
        // interface Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 1 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) a: string | number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "|",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { [|a|]: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a: number;|] };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.[|a|];


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) a: number",
      "textSpan": {
        "start": 30,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 30,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 30,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 30,
          "length": 10
        },
        "isWriteAccess": false,
        "isDefinition": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) a: string | number",
      "textSpan": {
        "start": 30,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 30,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 232,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { a: number; };
// }
// 
// interface Base {
//     /*FIND ALL REFS*/[|a|]: string;
//     b: string;
// }
// 
// interface HasAOrB extends Base {
//     [|a|]: string;
//     b: string;
// }
// 
// interface Two {
//     common: HasAOrB;
// }
// 
// var x : One | Two;
// 
// x.common.[|a|];

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) Base.a: string"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "Base",
    //   "kind": "interfaceName"
    //  },
    //  {
    //   "text": ".",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { a: number; };
    // }
    // 
    // interface Base {
    //     [|a|]: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     [|a: string;|]
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: true
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     [|a|]: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { a: number; };
        // }
        // 
        // interface Base {
        //     [|a: string;|]
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 1 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) HasAOrB.a: string"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "HasAOrB",
    //   "kind": "interfaceName"
    //  },
    //  {
    //   "text": ".",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { a: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     [|a|]: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     [|a: string;|]
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     [|a|]: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { a: number; };
        // }
        // 
        // interface Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     [|a: string;|]
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 2 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) a: string | number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "|",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { [|a|]: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a: number;|] };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.[|a|];


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) Base.a: string",
      "textSpan": {
        "start": 68,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Base",
          "kind": "interfaceName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 68,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 68,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 68,
          "length": 10
        },
        "isWriteAccess": false,
        "isDefinition": true
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) HasAOrB.a: string",
      "textSpan": {
        "start": 134,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "HasAOrB",
          "kind": "interfaceName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 134,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 134,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 134,
          "length": 10
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) a: string | number",
      "textSpan": {
        "start": 30,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 30,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 232,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/referencesForUnionProperties.ts ===
// interface One {
//     common: { [|a|]: number; };
// }
// 
// interface Base {
//     [|a|]: string;
//     b: string;
// }
// 
// interface HasAOrB extends Base {
//     [|a|]: string;
//     b: string;
// }
// 
// interface Two {
//     common: HasAOrB;
// }
// 
// var x : One | Two;
// 
// x.common./*FIND ALL REFS*/[|a|];

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) a: number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { [|a|]: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a: number;|] };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a|]: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { [|a: number;|] };
        // }
        // 
        // interface Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 1 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) Base.a: string"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "Base",
    //   "kind": "interfaceName"
    //  },
    //  {
    //   "text": ".",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { a: number; };
    // }
    // 
    // interface Base {
    //     [|a|]: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     [|a: string;|]
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     [|a|]: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { a: number; };
        // }
        // 
        // interface Base {
        //     [|a: string;|]
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 2 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) HasAOrB.a: string"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "HasAOrB",
    //   "kind": "interfaceName"
    //  },
    //  {
    //   "text": ".",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { a: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     [|a|]: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     [|a: string;|]
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     [|a|]: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
        // === ContextSpan ===
        // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
        // interface One {
        //     common: { a: number; };
        // }
        // 
        // interface Base {
        //     a: string;
        //     b: string;
        // }
        // 
        // interface HasAOrB extends Base {
        //     [|a: string;|]
        //     b: string;
        // }
        // 
        // interface Two {
        //     common: HasAOrB;
        // }
        // 
        // var x : One | Two;
        // 
        // x.common.a;
// === 3 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "property"
    // name: "(property) a: string | number"
    // displayParts: [
    //  {
    //   "text": "(",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": "property",
    //   "kind": "text"
    //  },
    //  {
    //   "text": ")",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "a",
    //   "kind": "propertyName"
    //  },
    //  {
    //   "text": ":",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "|",
    //   "kind": "punctuation"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
    // interface One {
    //     common: { [|a|]: number; };
    // }
    // 
    // interface Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface HasAOrB extends Base {
    //     a: string;
    //     b: string;
    // }
    // 
    // interface Two {
    //     common: HasAOrB;
    // }
    // 
    // var x : One | Two;
    // 
    // x.common.a;
      // === ContextSpan ===
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { [|a: number;|] };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.a;
  // === References ===
    // === 0 ===
      // isWriteAccess: false
      // === /tests/cases/fourslash/referencesForUnionProperties.ts ===
      // interface One {
      //     common: { a: number; };
      // }
      // 
      // interface Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface HasAOrB extends Base {
      //     a: string;
      //     b: string;
      // }
      // 
      // interface Two {
      //     common: HasAOrB;
      // }
      // 
      // var x : One | Two;
      // 
      // x.common.[|a|];


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) a: number",
      "textSpan": {
        "start": 30,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 30,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 30,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 30,
          "length": 10
        },
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) Base.a: string",
      "textSpan": {
        "start": 68,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "Base",
          "kind": "interfaceName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 68,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 68,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 68,
          "length": 10
        },
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) HasAOrB.a: string",
      "textSpan": {
        "start": 134,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "HasAOrB",
          "kind": "interfaceName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 134,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 134,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "contextSpan": {
          "start": 134,
          "length": 10
        },
        "isWriteAccess": false
      }
    ]
  },
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
      "kind": "property",
      "name": "(property) a: string | number",
      "textSpan": {
        "start": 30,
        "length": 1
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "a",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 30,
        "length": 10
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 232,
          "length": 1
        },
        "fileName": "/tests/cases/fourslash/referencesForUnionProperties.ts",
        "isWriteAccess": false
      }
    ]
  }
]