// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     [|RENAME|]: number;
//     property2: string;
// }
// var elems: I[], p1: number, property1: number;
// [{ RENAME: p1 }] = elems;
// [{ RENAME: property1/*END SUFFIX*/ }] = elems;

// === 0 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     [|property1|]: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     [|property1: number;|]
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [{ property1 }] = elems;
// === 1 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ [|property1|]: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [|[{ property1: p1 }] = elems;|]
    // [{ property1 }] = elems;
// === 2 ===
  // suffixText: ": property1"
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ [|property1|] }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [|[{ property1 }] = elems;|]


[
  {
    "textSpan": {
      "start": 18,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 18,
      "length": 18
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 109,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 141,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 138,
      "length": 24
    },
    "suffixText": ": property1"
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     RENAME: number;
//     property2: string;
// }
// var elems: I[], p1: number, property1: number;
// [{ [|RENAME|]: p1 }] = elems;
// [{ RENAME: property1/*END SUFFIX*/ }] = elems;

// === 0 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     [|property1|]: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     [|property1: number;|]
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [{ property1 }] = elems;
// === 1 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ [|property1|]: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [|[{ property1: p1 }] = elems;|]
    // [{ property1 }] = elems;
// === 2 ===
  // suffixText: ": property1"
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ [|property1|] }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [|[{ property1 }] = elems;|]


[
  {
    "textSpan": {
      "start": 18,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 18,
      "length": 18
    }
  },
  {
    "textSpan": {
      "start": 112,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 109,
      "length": 28
    }
  },
  {
    "textSpan": {
      "start": 141,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 138,
      "length": 24
    },
    "suffixText": ": property1"
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[], p1: number, [|RENAME|]: number;
// [{ property1: p1 }] = elems;
// [{ /*START PREFIX*/property1: RENAME }] = elems;

// === 0 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, [|property1|]: number;
  // [{ property1: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, [|property1: number|];
    // [{ property1: p1 }] = elems;
    // [{ property1 }] = elems;
// === 1 ===
  // prefixText: "property1: "
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ [|property1|] }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [|[{ property1 }] = elems;|]


[
  {
    "textSpan": {
      "start": 90,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 90,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 141,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 138,
      "length": 24
    },
    "prefixText": "property1: "
  }
]

// === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
// interface I {
//     property1: number;
//     property2: string;
// }
// var elems: I[], p1: number, RENAME: number;
// [{ property1: p1 }] = elems;
// [{ /*START PREFIX*/property1: [|RENAME|] }] = elems;

// === 0 ===
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, [|property1|]: number;
  // [{ property1: p1 }] = elems;
  // [{ property1 }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, [|property1: number|];
    // [{ property1: p1 }] = elems;
    // [{ property1 }] = elems;
// === 1 ===
  // prefixText: "property1: "
  // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
  // interface I {
  //     property1: number;
  //     property2: string;
  // }
  // var elems: I[], p1: number, property1: number;
  // [{ property1: p1 }] = elems;
  // [{ [|property1|] }] = elems;
    // === ContextSpan ===
    // === /tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts ===
    // interface I {
    //     property1: number;
    //     property2: string;
    // }
    // var elems: I[], p1: number, property1: number;
    // [{ property1: p1 }] = elems;
    // [|[{ property1 }] = elems;|]


[
  {
    "textSpan": {
      "start": 90,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 90,
      "length": 17
    }
  },
  {
    "textSpan": {
      "start": 141,
      "length": 9
    },
    "fileName": "/tests/cases/fourslash/renameDestructuringAssignmentNestedInArrayLiteral.ts",
    "contextSpan": {
      "start": 138,
      "length": 24
    },
    "prefixText": "property1: "
  }
]