// === /a.ts ===
// /*FIND ALL REFS*/export type [|T|] = number;
// export type U = string;

// === /b.ts ===
// const x: import("./a").[|T|] = 0;
// const x: import("./a").U = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type T = number"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "T",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type [|T|] = number;
    // export type U = string;
      // === ContextSpan ===
      // === /a.ts ===
      // [|export type T = number;|]
      // export type U = string;
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // isDefinition: true
      // === /a.ts ===
      // export type [|T|] = number;
      // export type U = string;
        // === ContextSpan ===
        // === /a.ts ===
        // [|export type T = number;|]
        // export type U = string;
    // === 1 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /b.ts ===
      // const x: import("./a").[|T|] = 0;
      // const x: import("./a").U = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 23,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// export type /*FIND ALL REFS*/[|T|] = number;
// export type U = string;

// === /b.ts ===
// const x: import("./a").[|T|] = 0;
// const x: import("./a").U = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type T = number"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "T",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type [|T|] = number;
    // export type U = string;
      // === ContextSpan ===
      // === /a.ts ===
      // [|export type T = number;|]
      // export type U = string;
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // isDefinition: true
      // === /a.ts ===
      // export type [|T|] = number;
      // export type U = string;
        // === ContextSpan ===
        // === /a.ts ===
        // [|export type T = number;|]
        // export type U = string;
    // === 1 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /b.ts ===
      // const x: import("./a").[|T|] = 0;
      // const x: import("./a").U = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 23,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// export type T = number;
// /*FIND ALL REFS*/export type [|U|] = string;

// === /b.ts ===
// const x: import("./a").T = 0;
// const x: import("./a").[|U|] = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type U = string"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "U",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type T = number;
    // export type [|U|] = string;
      // === ContextSpan ===
      // === /a.ts ===
      // export type T = number;
      // [|export type U = string;|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // isDefinition: true
      // === /a.ts ===
      // export type T = number;
      // export type [|U|] = string;
        // === ContextSpan ===
        // === /a.ts ===
        // export type T = number;
        // [|export type U = string;|]
    // === 1 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /b.ts ===
      // const x: import("./a").T = 0;
      // const x: import("./a").[|U|] = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type U = string",
      "textSpan": {
        "start": 36,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "U",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 24,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 36,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 24,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 53,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// export type T = number;
// export type /*FIND ALL REFS*/[|U|] = string;

// === /b.ts ===
// const x: import("./a").T = 0;
// const x: import("./a").[|U|] = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type U = string"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "U",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type T = number;
    // export type [|U|] = string;
      // === ContextSpan ===
      // === /a.ts ===
      // export type T = number;
      // [|export type U = string;|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // isDefinition: true
      // === /a.ts ===
      // export type T = number;
      // export type [|U|] = string;
        // === ContextSpan ===
        // === /a.ts ===
        // export type T = number;
        // [|export type U = string;|]
    // === 1 ===
      // isWriteAccess: false
      // isDefinition: false
      // === /b.ts ===
      // const x: import("./a").T = 0;
      // const x: import("./a").[|U|] = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type U = string",
      "textSpan": {
        "start": 36,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "U",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 24,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 36,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 24,
          "length": 23
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 53,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /a.ts ===
// export type [|T|] = number;
// export type U = string;

// === /b.ts ===
// const x: import("./a")./*FIND ALL REFS*/[|T|] = 0;
// const x: import("./a").U = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type T = number"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "T",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "number",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type [|T|] = number;
    // export type U = string;
      // === ContextSpan ===
      // === /a.ts ===
      // [|export type T = number;|]
      // export type U = string;
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /a.ts ===
      // export type [|T|] = number;
      // export type U = string;
        // === ContextSpan ===
        // === /a.ts ===
        // [|export type T = number;|]
        // export type U = string;
    // === 1 ===
      // isWriteAccess: false
      // === /b.ts ===
      // const x: import("./a").[|T|] = 0;
      // const x: import("./a").U = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type T = number",
      "textSpan": {
        "start": 12,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "T",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 0,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 12,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 0,
          "length": 23
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 23,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false
      }
    ]
  }
]

// === /a.ts ===
// export type T = number;
// export type [|U|] = string;

// === /b.ts ===
// const x: import("./a").T = 0;
// const x: import("./a")./*FIND ALL REFS*/[|U|] = 0;

// === 0 ===
  // === Definition ===
    // containerKind: ""
    // containerName: ""
    // kind: "type"
    // name: "type U = string"
    // displayParts: [
    //  {
    //   "text": "type",
    //   "kind": "keyword"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "U",
    //   "kind": "aliasName"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "=",
    //   "kind": "operator"
    //  },
    //  {
    //   "text": " ",
    //   "kind": "space"
    //  },
    //  {
    //   "text": "string",
    //   "kind": "keyword"
    //  }
    // ]
    // === /a.ts ===
    // export type T = number;
    // export type [|U|] = string;
      // === ContextSpan ===
      // === /a.ts ===
      // export type T = number;
      // [|export type U = string;|]
  // === References ===
    // === 0 ===
      // isWriteAccess: true
      // === /a.ts ===
      // export type T = number;
      // export type [|U|] = string;
        // === ContextSpan ===
        // === /a.ts ===
        // export type T = number;
        // [|export type U = string;|]
    // === 1 ===
      // isWriteAccess: false
      // === /b.ts ===
      // const x: import("./a").T = 0;
      // const x: import("./a").[|U|] = 0;


[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/a.ts",
      "kind": "type",
      "name": "type U = string",
      "textSpan": {
        "start": 36,
        "length": 1
      },
      "displayParts": [
        {
          "text": "type",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "U",
          "kind": "aliasName"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=",
          "kind": "operator"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "string",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 24,
        "length": 23
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 36,
          "length": 1
        },
        "fileName": "/a.ts",
        "contextSpan": {
          "start": 24,
          "length": 23
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 53,
          "length": 1
        },
        "fileName": "/b.ts",
        "isWriteAccess": false
      }
    ]
  }
]